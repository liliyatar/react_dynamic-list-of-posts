{"version":3,"sources":["User.js","Comment.js","CommentList.js","Post.js","PostList.js","App.js","api/posts.js","api/users.js","api/comments.js","index.js"],"names":["User","_ref","user","name","email","react_default","a","createElement","className","Comment","_ref$comment","comment","body","CommentList","comments","map","currentComment","src_Comment","key","id","Post","post","title","commentList","onTouchStart","concat","src_User","src_CommentList","PostList","searchingValue","posts","_useState","useState","_useState2","Object","slicedToArray","searchingItem","setSearchingItem","visiblePosts","filter","toLowerCase","includes","Fragment","onChange","_ref2","value","target","type","placeholder","length","currentPost","src_Post","preparedPosts","getPostsWithUsersAndComments","PostsList","UsersList","CommentsArr","find","person","userId","postId","objectSpread2","App","isInitialized","setInitialized","_useState3","_useState4","isLoading","setLoading","_useState5","_useState6","hasError","setError","loadPostsWithUsersAndComments","users","regenerator_default","async","_context","prev","next","awrap","Promise","all","fetch","then","response","json","sent","t0","stop","onClick","src_PostList","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.0396603c.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nfunction User({ user }) {\n  const { name, email } = user;\n\n  return (\n    <div>\n      <h3 className=\"user-name\">{name}</h3>\n      <p>{email}</p>\n    </div>\n  );\n}\n\nUser.propTypes = {\n  user: PropTypes.shape({\n    name: PropTypes.string.isRequired,\n    email: PropTypes.string.isRequired,\n  }).isRequired,\n};\n\nexport default User;\n","import PropTypes from 'prop-types';\nimport React from 'react';\n\nconst Comment = ({ comment: { name, body, email } }) => (\n  <div className=\"comment\">\n    <h3 className=\"comment-name\">{name}</h3>\n    <p className=\"comment-body\">{body}</p>\n    <p className=\"comment-email\">\n      <span>By </span>\n      {email}\n    </p>\n  </div>\n);\n\nComment.propTypes\n  = { comment: PropTypes.oneOfType([PropTypes.object]).isRequired };\n\nexport default Comment;\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport Comment from './Comment';\n\nconst CommentList = ({ comments }) => (\n  <div>\n    {comments.map(currentComment => (\n      <Comment comment={currentComment} key={currentComment.id} />))}\n  </div>\n);\n\nCommentList.propTypes\n  = { comments: PropTypes.oneOfType([PropTypes.array]).isRequired };\n\nexport default CommentList;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport User from './User';\nimport CommentList from './CommentList';\n\nconst Post = ({ post }) => {\n  const { title, body, user, commentList } = post;\n\n  return (\n    <div\n      className=\"flip-container\"\n      onTouchStart=\"this.classList.toggle('hover');\"\n    >\n      <div className=\"flipper\">\n        <div className=\"front\">\n          <h2 className=\"front-heading\">{title}</h2>\n          <p className=\"front-body\">{ `\"${body}\"`}</p>\n          <User user={user} />\n        </div>\n        <div className=\"back\">\n          <p className=\"back-heading\">Comments:</p>\n          <CommentList comments={commentList} />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nPost.propTypes = {\n  post: PropTypes.shape({\n    id: PropTypes.number.isRequired,\n    title: PropTypes.string.isRequired,\n    body: PropTypes.string.isRequired,\n    user: PropTypes.shape({}).isRequired,\n    commentList: PropTypes.arrayOf(PropTypes.object.isRequired).isRequired,\n  }).isRequired,\n};\n\nexport default Post;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport Post from './Post';\n\nconst PostList = ({ posts }) => {\n  const [searchingItem, setSearchingItem] = useState('');\n\n  const handleSearchingInputChange = ({ target: { value } }) => {\n    setSearchingItem(value);\n  };\n\n  const getSearchedPosts = (ArrOfPosts, searchingValue) => (\n    ArrOfPosts.filter(post => (\n      post.title.toLowerCase().includes(searchingValue.toLowerCase())\n      || post.body.toLowerCase().includes(searchingValue.toLowerCase())\n    )));\n\n  const visiblePosts = searchingItem\n    ? getSearchedPosts(posts, searchingItem)\n    : posts;\n\n  return (\n    <>\n      <input\n        onChange={handleSearchingInputChange}\n        className=\"search\"\n        type=\"text\"\n        placeholder=\"Search\"\n      />\n      {(visiblePosts.length < 1)\n        ? (<div className=\"result\">No results...</div>)\n        : (visiblePosts\n          .map(currentPost => (\n            <Post\n              post={currentPost}\n              key={currentPost.id}\n            />\n          )))}\n    </>\n  );\n};\n\nPostList.propTypes = {\n  posts: PropTypes.oneOfType([PropTypes.array]).isRequired,\n};\n\nexport default PostList;\n","import React, { useState } from 'react';\nimport './App.css';\n\nimport { getPosts } from './api/posts';\nimport { getUsers } from './api/users';\nimport { getComments } from './api/comments';\n\nimport PostList from './PostList';\n\nlet preparedPosts = [];\n\nconst getPostsWithUsersAndComments = (PostsList, UsersList, CommentsArr) => (\n  PostsList.map((post) => {\n    const user = UsersList.find(person => person.id === post.userId);\n    const commentList = CommentsArr\n      .filter(comment => comment.postId === post.id);\n\n    return {\n      ...post,\n      user,\n      commentList,\n    };\n  })\n);\n\nconst App = () => {\n  const [isInitialized, setInitialized] = useState(false);\n  const [isLoading, setLoading] = useState(false);\n  const [hasError, setError] = useState(false);\n\n  const loadPostsWithUsersAndComments = async() => {\n    try {\n      setError(false);\n      setLoading(true);\n\n      const [posts, users, comments] = await Promise\n        .all([getPosts(), getUsers(), getComments()]);\n\n      preparedPosts = getPostsWithUsersAndComments(posts, users, comments);\n      setInitialized(true);\n    } catch {\n      setError(true);\n    }\n\n    setLoading(false);\n  };\n\n  return (\n    <>\n      {!isInitialized && !isLoading && !hasError && (\n        <button\n          type=\"button\"\n          className=\"btnLoad\"\n          onClick={loadPostsWithUsersAndComments}\n        >\n          Load\n        </button>\n      )}\n      <div className=\"App\">\n        {isLoading && !hasError && (\n          <div className=\"hoja\">Loading...</div>\n        )}\n\n        {hasError && (\n          <button\n            className=\"btnError\"\n            type=\"button\"\n            onClick={loadPostsWithUsersAndComments}\n          >\n            Error...Try again\n          </button>\n        )}\n\n        {isInitialized && !isLoading && (\n          <PostList posts={preparedPosts} />\n        )}\n      </div>\n    </>\n  );\n};\n\nexport default App;\n","const postsURL = 'https://jsonplaceholder.typicode.com/posts';\n\nexport const getPosts = () => fetch(postsURL)\n  .then(response => response.json());\n","const usersURL = 'https://jsonplaceholder.typicode.com/users';\n\nexport const getUsers = () => fetch(usersURL)\n  .then(response => response.json());\n","const commentsURL = 'https://jsonplaceholder.typicode.com/comments';\n\nexport const getComments = () => fetch(commentsURL)\n  .then(response => response.json());\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}