{"version":3,"sources":["User.js","Comment.js","CommentList.js","Post.js","PostList.js","App.js","api/posts.js","api/users.js","api/comments.js","index.js"],"names":["User","_ref","user","name","email","react_default","a","createElement","Comment","_ref$comment","comment","body","CommentList","comments","map","currentComment","src_Comment","key","id","Post","post","title","commentList","upperTitle","concat","slice","toUpperCase","className","onTouchStart","src_User","src_CommentList","PostList","posts","currentPost","src_Post","preparedPosts","getPostsWithUsersAndComments","PostsList","UsersList","CommentsArr","find","person","userId","filter","postId","Object","objectSpread2","App","_useState","useState","_useState2","slicedToArray","isInitialized","setInitialized","_useState3","_useState4","isLoading","setLoading","_useState5","_useState6","hasError","setError","loadPostsWithUsersAndComments","_ref2","users","regenerator_default","async","_context","prev","next","awrap","Promise","all","fetch","then","response","json","sent","toConsumableArray","t0","stop","Fragment","type","onClick","src_PostList","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.ca83f8cd.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nfunction User({ user }) {\n  const { name, email } = user;\n\n  return (\n    <div>\n      <h3>{name}</h3>\n      <p>{email}</p>\n    </div>\n  );\n}\n\nconst userPropTypes = PropTypes.shape({\n  id: PropTypes.number,\n  name: PropTypes.string,\n  email: PropTypes.string,\n  address: PropTypes.shape({\n    street: PropTypes.string,\n    city: PropTypes.string,\n  }),\n}).isRequired;\n\nUser.propTypes = { user: userPropTypes.isRequired };\n\nexport default User;\n","import PropTypes from 'prop-types';\nimport React from 'react';\n\nconst Comment = ({ comment: { name, body, email } }) => (\n  <div>\n    <h3>{name}</h3>\n    <p>{body}</p>\n    <p>\n      <span>By </span>\n      {email}\n    </p>\n  </div>\n);\n\nComment.propTypes\n  = { comment: PropTypes.oneOfType([PropTypes.object]).isRequired };\n\nexport default Comment;\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport Comment from './Comment';\n\nconst CommentList = ({ comments }) => (\n  <div>\n    {comments.map(currentComment => (\n      <Comment comment={currentComment} key={currentComment.id} />))}\n  </div>\n);\n\nCommentList.propTypes\n  = { comments: PropTypes.oneOfType([PropTypes.array]).isRequired };\n\nexport default CommentList;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport User from './User';\nimport CommentList from './CommentList';\n\nconst Post = ({ post }) => {\n  const { title, body, user, commentList } = post;\n  const upperTitle = `${title.slice(0, 1).toUpperCase()}${title.slice(1)}`;\n\n  return (\n    <div\n      className=\"flip-container\"\n      onTouchStart=\"this.classList.toggle('hover');\"\n    >\n      <div className=\"flipper\">\n        <div className=\"front\">\n          <h2 className=\"front-heading\">{upperTitle}</h2>\n          <p>{ `\"${body}\"`}</p>\n          <User user={user} />\n        </div>\n        <div className=\"back\">\n          <p className=\"back-heading\">Comments:</p>\n          <CommentList comments={commentList} />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nconst postProps = PropTypes.shape({\n  id: PropTypes.number,\n  title: PropTypes.string,\n}).isRequired;\n\nPost.propTypes = { post: postProps.isRequired };\n\nexport default Post;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Post from './Post';\n\nconst PostList = ({ posts }) => posts.map(currentPost => (\n  <Post post={currentPost} key={currentPost.id} />\n));\n\nPostList.propTypes = {\n  posts: PropTypes.oneOfType([PropTypes.array]).isRequired,\n};\n\nexport default PostList;\n","import React, { useState } from 'react';\nimport './App.css';\n\nimport { getPosts } from './api/posts';\nimport { getUsers } from './api/users';\nimport { getComments } from './api/comments';\n\nimport PostList from './PostList';\n\nlet preparedPosts = [];\n\nconst getPostsWithUsersAndComments = (PostsList, UsersList, CommentsArr) => (\n  PostsList.map((post) => {\n    const user = UsersList.find(person => person.id === post.userId);\n    const commentList = CommentsArr\n      .filter(comment => comment.postId === post.id);\n\n    return {\n      ...post,\n      user,\n      commentList,\n    };\n  })\n);\n\nconst App = () => {\n  const [isInitialized, setInitialized] = useState(false);\n  const [isLoading, setLoading] = useState(false);\n  const [hasError, setError] = useState(false);\n\n  const loadPostsWithUsersAndComments = async() => {\n    try {\n      setError(false);\n      setLoading(true);\n\n      const [posts, users, comments] = await Promise\n        .all([getPosts(), getUsers(), getComments()]);\n\n      preparedPosts = [...getPostsWithUsersAndComments(posts, users, comments)];\n      setInitialized(true);\n    } catch {\n      setError(true);\n    }\n\n    setLoading(false);\n  };\n\n  return (\n    <>\n      {!isInitialized && !isLoading && !hasError && (\n        <button\n          type=\"button\"\n          className=\"btnLoad\"\n          onClick={loadPostsWithUsersAndComments}\n        >\n          Load Posts\n        </button>\n      )}\n      <div className=\"App\">\n        {isLoading && !hasError && (\n          <div className=\"hoja\">Loading...</div>\n        )}\n\n        {hasError && (\n          <button\n            type=\"button\"\n            onClick={loadPostsWithUsersAndComments}\n          >\n            Try again\n          </button>\n        )}\n\n        {isInitialized && !isLoading && (\n          <PostList posts={[...preparedPosts]} />\n        )}\n      </div>\n    </>\n  );\n};\n\nexport default App;\n","const postsURL = 'https://jsonplaceholder.typicode.com/posts';\n\nexport const getPosts = () => fetch(postsURL)\n  .then(response => response.json());\n","const usersURL = 'https://jsonplaceholder.typicode.com/users';\n\nexport const getUsers = () => fetch(usersURL)\n  .then(response => response.json());\n","const commentsURL = 'https://jsonplaceholder.typicode.com/comments';\n\nexport const getComments = () => fetch(commentsURL)\n  .then(response => response.json());\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}