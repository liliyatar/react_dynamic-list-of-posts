{"version":3,"sources":["User.js","Comment.js","CommentList.js","Post.js","PostList.js","App.js","api/posts.js","api/users.js","api/comments.js","index.js"],"names":["User","_ref","user","name","email","react_default","a","createElement","className","Comment","_ref$comment","comment","body","CommentList","comments","map","currentComment","src_Comment","key","id","Post","post","title","commentList","concat","src_User","src_CommentList","PostList","posts","_useState","useState","_useState2","Object","slicedToArray","searchPosts","setSearchPosts","_useState3","_useState4","searchingItem","setSearchingItem","getSearchedPosts","debounce","inputValue","filter","toLowerCase","includes","Fragment","onChange","_ref2","target","value","type","placeholder","length","currentPost","src_Post","getPostsWithUsersAndComments","PostsList","UsersList","CommentsArr","find","person","userId","postId","objectSpread2","App","preparedPosts","setPreparedPosts","isInitialized","setInitialized","_useState5","_useState6","isLoading","setLoading","_useState7","_useState8","hasError","setError","loadPostsWithUsersAndComments","users","regenerator_default","async","_context","prev","next","awrap","Promise","all","fetch","then","response","json","sent","t0","stop","onClick","src_PostList","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.839c93f4.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nfunction User({ user }) {\n  const { name, email } = user;\n\n  return (\n    <div>\n      <h3 className=\"user-name\">{name}</h3>\n      <p>{email}</p>\n    </div>\n  );\n}\n\nUser.propTypes = {\n  user: PropTypes.shape({\n    name: PropTypes.string.isRequired,\n    email: PropTypes.string.isRequired,\n  }).isRequired,\n};\n\nexport default User;\n","import PropTypes from 'prop-types';\nimport React from 'react';\n\nconst Comment = ({ comment: { name, body, email } }) => (\n  <div className=\"comment\">\n    <h3 className=\"comment-name\">{name}</h3>\n    <p className=\"comment-body\">{body}</p>\n    <p className=\"comment-email\">\n      <span>By </span>\n      {email}\n    </p>\n  </div>\n);\n\nComment.propTypes\n  = { comment: PropTypes.oneOfType([PropTypes.object]).isRequired };\n\nexport default Comment;\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport Comment from './Comment';\n\nconst CommentList = ({ comments }) => (\n  <div>\n    {comments.map(currentComment => (\n      <Comment comment={currentComment} key={currentComment.id} />))}\n  </div>\n);\n\nCommentList.propTypes\n  = { comments: PropTypes.oneOfType([PropTypes.array]).isRequired };\n\nexport default CommentList;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport User from './User';\nimport CommentList from './CommentList';\n\nconst Post = ({ post }) => {\n  const { title, body, user, commentList } = post;\n\n  return (\n    <div className=\"flip-container\">\n      <div className=\"flipper\">\n        <div className=\"front\">\n          <h2 className=\"front-heading\">{title}</h2>\n          <p className=\"front-body\">{ `\"${body}\"`}</p>\n          <User user={user} />\n        </div>\n        <div className=\"back\">\n          <p className=\"back-heading\">Comments:</p>\n          <CommentList comments={commentList} />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nPost.propTypes = {\n  post: PropTypes.shape({\n    id: PropTypes.number.isRequired,\n    title: PropTypes.string.isRequired,\n    body: PropTypes.string.isRequired,\n    user: PropTypes.shape({}).isRequired,\n    commentList: PropTypes.arrayOf(PropTypes.object.isRequired).isRequired,\n  }).isRequired,\n};\n\nexport default Post;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { debounce } from 'debounce';\nimport Post from './Post';\n\nconst PostList = ({ posts }) => {\n  const [searchPosts, setSearchPosts] = useState(posts);\n  const [searchingItem, setSearchingItem] = useState('');\n\n  const handleInput = ({ target }) => {\n    setSearchingItem(target.value.toLowerCase());\n    getSearchedPosts(target.value.toLowerCase());\n  };\n\n  const getSearchedPosts = debounce(inputValue => setSearchPosts(\n    posts.filter(post => (\n      post.title.toLowerCase().includes(inputValue)\n      || post.body.toLowerCase().includes(inputValue)\n    ))\n  ), 1000);\n\n  return (\n    <>\n      <input\n        onChange={handleInput}\n        value={searchingItem}\n        className=\"search\"\n        type=\"text\"\n        placeholder=\"Search\"\n      />\n      {(searchPosts.length < 1)\n        ? (<div className=\"result\">No results...</div>)\n        : (searchPosts\n          .map(currentPost => (\n            <Post\n              post={currentPost}\n              key={currentPost.id}\n            />\n          )))}\n    </>\n  );\n};\n\nPostList.propTypes = {\n  posts: PropTypes.oneOfType([PropTypes.array]).isRequired,\n};\n\nexport default PostList;\n","import React, { useState } from 'react';\nimport './App.css';\n\nimport { getPosts } from './api/posts';\nimport { getUsers } from './api/users';\nimport { getComments } from './api/comments';\n\nimport PostList from './PostList';\n\nconst getPostsWithUsersAndComments = (PostsList, UsersList, CommentsArr) => (\n  PostsList.map((post) => {\n    const user = UsersList.find(person => person.id === post.userId);\n    const commentList = CommentsArr\n      .filter(comment => comment.postId === post.id);\n\n    return {\n      ...post,\n      user,\n      commentList,\n    };\n  })\n);\n\nconst App = () => {\n  const [preparedPosts, setPreparedPosts] = useState([]);\n  const [isInitialized, setInitialized] = useState(false);\n  const [isLoading, setLoading] = useState(false);\n  const [hasError, setError] = useState(false);\n\n  const loadPostsWithUsersAndComments = async() => {\n    try {\n      setError(false);\n      setLoading(true);\n\n      const [posts, users, comments] = await Promise\n        .all([getPosts(), getUsers(), getComments()]);\n\n      setPreparedPosts(getPostsWithUsersAndComments(posts, users, comments));\n      setInitialized(true);\n    } catch {\n      setError(true);\n    }\n\n    setLoading(false);\n  };\n\n  return (\n    <>\n      {!isInitialized && !isLoading && !hasError && (\n        <button\n          type=\"button\"\n          className=\"btnLoad\"\n          onClick={loadPostsWithUsersAndComments}\n        >\n          Load\n        </button>\n      )}\n      <div className=\"App\">\n        {hasError && (\n          <button\n            className=\"btnError\"\n            type=\"button\"\n            onClick={loadPostsWithUsersAndComments}\n          >\n            Error...Try again\n          </button>\n        )}\n\n        {isInitialized && (\n          <PostList posts={preparedPosts} />\n        )}\n\n        {isLoading && !hasError && (\n          <div className=\"hoja\">Loading...</div>\n        )}\n      </div>\n    </>\n  );\n};\n\nexport default App;\n","const postsURL = 'https://jsonplaceholder.typicode.com/posts';\n\nexport const getPosts = () => fetch(postsURL)\n  .then(response => response.json());\n","const usersURL = 'https://jsonplaceholder.typicode.com/users';\n\nexport const getUsers = () => fetch(usersURL)\n  .then(response => response.json());\n","const commentsURL = 'https://jsonplaceholder.typicode.com/comments';\n\nexport const getComments = () => fetch(commentsURL)\n  .then(response => response.json());\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}